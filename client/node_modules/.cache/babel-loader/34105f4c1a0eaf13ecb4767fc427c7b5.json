{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shivansh\\\\Desktop\\\\BLOG mp2\\\\client\\\\src\\\\components\\\\post\\\\UpdateView.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, FormControl, InputBase, makeStyles, TextareaAutosize } from \"@material-ui/core\";\nimport { AddCircle } from \"@material-ui/icons\";\nimport { useEffect, useState } from \"react\";\nimport { getPost, updatePost, uploadFile } from \"../../service/api.js\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0 100px',\n    [theme.breakpoints.down('md')]: {\n      padding: 0\n    }\n  },\n  image: {\n    width: '100%',\n    height: '50vh',\n    objectFit: 'cover'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: 10\n  },\n  textField: {\n    flex: 1,\n    margin: '0 30px',\n    fontSize: 25\n  },\n  textarea: {\n    width: '100%',\n    marginTop: 50,\n    border: 'none',\n    fontSize: 18,\n    '&:focus-visible': {\n      outline: 'none'\n    }\n  }\n}));\nconst intialValue = {\n  title: '',\n  description: '',\n  picture: '',\n  username: 'shivansh shukla',\n  categories: 'All',\n  createDate: new Date()\n};\n\nconst UpdateView = ({\n  match\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [post, setPost] = useState(intialValue);\n  const [file, setFile] = useState('');\n  const [image, setImage] = useState('');\n  const url = post.picture ? post.picture : 'https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80';\n  useEffect(() => {\n    const getImage = async () => {\n      console.log(file);\n\n      if (file) {\n        const data = new FormData();\n        data.append(\"name\", file.name);\n        data.append('file', file);\n        const image = await uploadFile(data);\n        post.picture = image.data;\n        setImage(image.data);\n      }\n    };\n\n    getImage();\n  }, [file]);\n  useEffect(() => {\n    const fetchData = async () => {\n      let data = await getPost(match.params.id);\n      console.log(data);\n      setPost(data);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleChange = e => {\n    setPost({ ...post,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const updateBlog = async () => {\n    await updatePost(match.params.id, post);\n    history.push(`/details/${match.params.id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: classes.image,\n      src: url,\n      alt: \"createView img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"FileInput\",\n        children: /*#__PURE__*/_jsxDEV(AddCircle, {\n          fontSize: \"large\",\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0]),\n        id: \"FileInput\",\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n        placeholder: \"Title\",\n        onChange: e => handleChange(e),\n        className: classes.textField,\n        value: post.title,\n        name: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => updateBlog(),\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"UPDATE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n      className: classes.textarea,\n      rowsMin: \"5\",\n      onChange: e => handleChange(e),\n      placeholder: \"Write your content here.........\",\n      name: \"description\",\n      value: post.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateView, \"izeHPgk/IkBxsUNIjow4gxrVCsw=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = UpdateView;\nexport default UpdateView;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateView\");","map":{"version":3,"sources":["C:/Users/shivansh/Desktop/BLOG mp2/client/src/components/post/UpdateView.jsx"],"names":["Box","Button","FormControl","InputBase","makeStyles","TextareaAutosize","AddCircle","useEffect","useState","getPost","updatePost","uploadFile","useHistory","useStyles","theme","container","padding","breakpoints","down","image","width","height","objectFit","form","display","flexDirection","marginTop","textField","flex","margin","fontSize","textarea","border","outline","intialValue","title","description","picture","username","categories","createDate","Date","UpdateView","match","classes","history","post","setPost","file","setFile","setImage","url","getImage","console","log","data","FormData","append","name","fetchData","params","id","handleChange","e","target","value","updateBlog","push","files"],"mappings":"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","sourcesContent":["import { Box, Button, FormControl, InputBase, makeStyles, TextareaAutosize } from \"@material-ui/core\";\r\nimport { AddCircle } from \"@material-ui/icons\"\r\nimport { useEffect, useState } from \"react\";\r\nimport { getPost,updatePost,uploadFile } from \"../../service/api.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        padding: '0 100px',\r\n        [theme.breakpoints.down('md')]: {\r\n            padding: 0\r\n        }\r\n    },\r\n    image: {\r\n        width: '100%',\r\n        height: '50vh',\r\n        objectFit: 'cover'\r\n    },\r\n    form:{\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        marginTop: 10,\r\n\r\n    },\r\n    textField:{\r\n        flex:1,\r\n        margin:'0 30px',\r\n        fontSize: 25\r\n    },\r\n    textarea:{\r\n        width:'100%',\r\n        marginTop:50,\r\n        border:'none',\r\n        fontSize:18,\r\n        '&:focus-visible':{\r\n            outline:'none'\r\n        }\r\n    }\r\n}\r\n));\r\n\r\n\r\nconst intialValue={\r\n    title:'',\r\n    description:'',\r\n    picture:'',\r\n    username:'shivansh shukla',\r\n    categories:'All',\r\n    createDate:new Date()\r\n}\r\n\r\n\r\nconst UpdateView = ({match}) => {\r\n    const classes = useStyles();\r\n    const history=useHistory();\r\n    const [post,setPost] = useState(intialValue);\r\n    const [file,setFile] = useState('');\r\n    const [image,setImage]= useState('');\r\n\r\n    const url = post.picture ? post.picture : 'https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80';\r\n\r\n    useEffect(() =>{\r\n        const getImage= async () =>{\r\n            console.log(file);\r\n            if(file){\r\n                const data= new FormData();\r\n                data.append(\"name\",file.name);\r\n                data.append('file',file);\r\n\r\n                const image=await uploadFile(data);\r\n                post.picture=image.data;\r\n                setImage(image.data);\r\n            }\r\n        }\r\n        getImage();\r\n    }, [file]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async() =>{\r\n            let data =await getPost(match.params.id);\r\n            console.log(data);\r\n            setPost(data);\r\n        }\r\n        fetchData();\r\n    },[]);\r\n\r\n    const handleChange = (e) => {\r\n        setPost({ ...post,[e.target.name]:e.target.value });\r\n    }\r\n\r\n    const updateBlog = async() =>{\r\n        await updatePost(match.params.id, post);\r\n        history.push(`/details/${match.params.id}`);\r\n    }\r\n\r\n\r\n    return (\r\n        <Box className={classes.container}>\r\n            <img className={classes.image} src={url} alt='createView img' />\r\n            \r\n            <FormControl className={classes.form}>\r\n            <label htmlFor='FileInput'>\r\n                    <AddCircle \r\n                        fontSize='large' \r\n                        color='action' \r\n                    />\r\n                </label>\r\n                <input \r\n                    type='file'\r\n                    onChange={(e) => setFile(e.target.files[0])}\r\n                    id='FileInput'\r\n                    style={{display:'none'}}/>\r\n\r\n                <InputBase \r\n                    placeholder=\"Title\" \r\n                    onChange={(e) => handleChange(e)}\r\n                    className={classes.textField} \r\n                    value={post.title}\r\n                    name='title'/>\r\n\r\n                <Button \r\n                    onClick={() => updateBlog()}\r\n                    variant='contained' \r\n                    color='primary'>UPDATE</Button>\r\n\r\n            </FormControl>\r\n            \r\n            <TextareaAutosize  \r\n                className={classes.textarea} \r\n                rowsMin='5'\r\n                onChange={(e) => handleChange(e)} \r\n                placeholder='Write your content here.........'\r\n                name='description'\r\n                value={post.description}/>\r\n        </Box>\r\n    )\r\n}\r\nexport default UpdateView;"]},"metadata":{},"sourceType":"module"}