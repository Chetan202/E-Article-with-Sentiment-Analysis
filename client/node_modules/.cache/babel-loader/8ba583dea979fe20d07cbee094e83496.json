{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shivansh\\\\Desktop\\\\project\\\\backup without auth\\\\Blog-Website\\\\client\\\\src\\\\components\\\\create\\\\CreatePost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Box, makeStyles, TextareaAutosize, Button, FormControl, InputBase } from '@material-ui/core';\nimport { AddCircle as Add, CallEnd } from '@material-ui/icons';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { createPost, uploadFile } from '../../service/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(theme => ({\n  container: {\n    margin: '50px 100px',\n    [theme.breakpoints.down('md')]: {\n      margin: 0\n    }\n  },\n  image: {\n    width: '100%',\n    height: '50vh',\n    objectFit: 'cover'\n  },\n  title: {\n    marginTop: 10,\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  textfield: {\n    flex: 1,\n    margin: '0 30px',\n    fontSize: 25\n  },\n  textarea: {\n    width: '100%',\n    border: 'none',\n    marginTop: 50,\n    fontSize: 18,\n    '&:focus-visible': {\n      outline: 'none'\n    }\n  }\n}));\nconst initialPost = {\n  title: '',\n  description: '',\n  picture: '',\n  username: '',\n  categories: '',\n  createdDate: new Date()\n};\n\nconst CreatePost = () => {\n  _s();\n\n  const classes = useStyle();\n  const history = useHistory();\n  const location = useLocation();\n  const [post, setPost] = useState(initialPost);\n  const [file, setFile] = useState('');\n  const [imageURL, setImageURL] = useState('');\n  const url = post.picture ? post.picture : 'https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80';\n  useEffect(() => {\n    var _location$search;\n\n    const getImage = async () => {\n      if (file) {\n        const data = new FormData();\n        data.append(\"name\", file.name);\n        data.append(\"file\", file);\n        const image = await uploadFile(data);\n        post.picture = image.data;\n        setImageURL(image.data);\n      }\n    };\n\n    getImage();\n    post.categories = ((_location$search = location.search) === null || _location$search === void 0 ? void 0 : _location$search.split('=')[1]) || 'All';\n    post.username = 'bhondu';\n  }, [file]);\n\n  const savePost = async () => {\n    await createPost(post);\n    history.push('/');\n  };\n\n  const handleChange = e => {\n    setPost({ ...post,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: url,\n      alt: \"post\",\n      className: classes.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.title,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileInput\",\n        children: /*#__PURE__*/_jsxDEV(Add, {\n          className: classes.addIcon,\n          fontSize: \"large\",\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"fileInput\",\n        style: {\n          display: \"none\"\n        },\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n        onChange: e => handleChange(e),\n        name: \"title\",\n        placeholder: \"Title\",\n        className: classes.textfield\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => savePost(),\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Publish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n      rowsMin: 5,\n      placeholder: \"Tell your story...\",\n      className: classes.textarea,\n      name: \"description\",\n      onChange: e => handleChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePost, \"Hu/Q+YOGVx4RH/Zd6DKcGpKhGew=\", false, function () {\n  return [useStyle, useHistory, useLocation];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["C:/Users/shivansh/Desktop/project/backup without auth/Blog-Website/client/src/components/create/CreatePost.jsx"],"names":["React","useState","useEffect","useContext","Box","makeStyles","TextareaAutosize","Button","FormControl","InputBase","AddCircle","Add","CallEnd","useHistory","useLocation","createPost","uploadFile","useStyle","theme","container","margin","breakpoints","down","image","width","height","objectFit","title","marginTop","display","flexDirection","textfield","flex","fontSize","textarea","border","outline","initialPost","description","picture","username","categories","createdDate","Date","CreatePost","classes","history","location","post","setPost","file","setFile","imageURL","setImageURL","url","getImage","data","FormData","append","name","search","split","savePost","push","handleChange","e","target","value","addIcon","files"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Box, makeStyles, TextareaAutosize, Button, FormControl, InputBase } from '@material-ui/core';\nimport { AddCircle as Add, CallEnd } from '@material-ui/icons';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { createPost, uploadFile } from '../../service/api';\n\nconst useStyle = makeStyles(theme => ({\n    container: {\n        margin: '50px 100px',\n        [theme.breakpoints.down('md')]: {\n            margin: 0\n        },\n    },\n    image: {\n        width: '100%',\n        height: '50vh',\n        objectFit: 'cover'\n    },\n    title: {\n        marginTop: 10,\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    textfield: {\n        flex: 1,\n        margin: '0 30px',\n        fontSize: 25\n    },\n    textarea: {\n        width: '100%',\n        border: 'none',\n        marginTop: 50,\n        fontSize: 18,\n        '&:focus-visible': {\n            outline: 'none'\n        }\n    }\n}));\n\nconst initialPost = {\n    title: '',\n    description: '',\n    picture: '',\n    username: '',\n    categories: '',\n    createdDate: new Date()\n}\n\nconst CreatePost = () => {\n    const classes = useStyle();\n    const history = useHistory();\n    const location = useLocation();\n\n    const [post, setPost] = useState(initialPost);\n    const [file, setFile] = useState('');\n    const [imageURL, setImageURL] = useState('');\n    \n\n    const url = post.picture ? post.picture : 'https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80';\n    \n    useEffect(() => {\n        const getImage = async () => { \n            if(file) {\n                const data = new FormData();\n                data.append(\"name\", file.name);\n                data.append(\"file\", file);\n                \n                const image = await uploadFile(data);\n                post.picture = image.data;\n                setImageURL(image.data);\n            }\n        }\n        getImage();\n        post.categories = location.search?.split('=')[1] || 'All'\n        post.username = 'bhondu';\n    }, [file])\n\n    const savePost = async () => {\n        await createPost(post);\n        history.push('/');\n    }\n\n    const handleChange = (e) => {\n        setPost({ ...post, [e.target.name]: e.target.value });\n    }\n\n    return (\n        <Box className={classes.container}>\n            <img src={url} alt=\"post\" className={classes.image} />\n\n            <FormControl className={classes.title}>\n                <label htmlFor=\"fileInput\">\n                    <Add className={classes.addIcon} fontSize=\"large\" color=\"action\" />\n                </label>\n                <input\n                    type=\"file\"\n                    id=\"fileInput\"\n                    style={{ display: \"none\" }}\n                    onChange={(e) => setFile(e.target.files[0])}\n                />\n                <InputBase onChange={(e) => handleChange(e)} name='title' placeholder=\"Title\" className={classes.textfield} />\n                <Button onClick={() => savePost()} variant=\"contained\" color=\"primary\">Publish</Button>\n            </FormControl>\n\n            <TextareaAutosize\n                rowsMin={5}\n                placeholder=\"Tell your story...\"\n                className={classes.textarea}\n                name='description'\n                onChange={(e) => handleChange(e)} \n            />\n        </Box>\n    )\n}\n\nexport default CreatePost;"]},"metadata":{},"sourceType":"module"}