{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shivansh\\\\Desktop\\\\Blog-Website\\\\client\\\\src\\\\context\\\\ContextProvider.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginContext = /*#__PURE__*/createContext(null);\n\nconst ContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [account, setAccount] = useState('');\n  const localStorage = window.localStorage.getItem(\"okta-token-storage\");\n  useEffect(() => {\n    let email = localStorage && JSON.parse(localStorage).idToken.claims.email;\n    email = email && email.split('@')[0];\n    setAccount(email);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n    value: {\n      account,\n      setAccount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContextProvider, \"/Om1tSISjyHfCi6D2A0asSND2LE=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["C:/Users/shivansh/Desktop/Blog-Website/client/src/context/ContextProvider.js"],"names":["createContext","useEffect","useState","LoginContext","ContextProvider","children","account","setAccount","localStorage","window","getItem","email","JSON","parse","idToken","claims","split"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;;AAGA,OAAO,MAAMC,YAAY,gBAAGH,aAAa,CAAC,IAAD,CAAlC;;AAEP,MAAMI,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACtC,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMM,YAAY,GAAGC,MAAM,CAACD,YAAP,CAAoBE,OAApB,CAA4B,oBAA5B,CAArB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,KAAK,GAAGH,YAAY,IAAII,IAAI,CAACC,KAAL,CAAWL,YAAX,EAAyBM,OAAzB,CAAiCC,MAAjC,CAAwCJ,KAApE;AACAA,IAAAA,KAAK,GAAGA,KAAK,IAAIA,KAAK,CAACK,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAjB;AACAT,IAAAA,UAAU,CAACI,KAAD,CAAV;AACH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEL,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAA9B;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAfD;;GAAMD,e;;KAAAA,e;AAiBN,eAAeA,eAAf","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\n\n\nexport const LoginContext = createContext(null);\n\nconst ContextProvider = ({ children }) => {\n    const [ account, setAccount ] = useState('');\n    const localStorage = window.localStorage.getItem(\"okta-token-storage\");\n        \n    useEffect(() => {\n        let email = localStorage && JSON.parse(localStorage).idToken.claims.email;\n        email = email && email.split('@')[0];\n        setAccount(email);\n    }, [])\n\n    return (\n        <LoginContext.Provider value={{ account, setAccount }}>\n            {children}\n        </LoginContext.Provider>\n    )\n}\n\nexport default ContextProvider;"]},"metadata":{},"sourceType":"module"}