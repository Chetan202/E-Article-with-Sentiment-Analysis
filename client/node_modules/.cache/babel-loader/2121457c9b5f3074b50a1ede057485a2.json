{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shivansh\\\\Desktop\\\\MERN-Stack-Projects-master\\\\MERN-Stack-Projects-master\\\\Blog-Website\\\\client\\\\src\\\\components\\\\details\\\\comments\\\\Comments.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Box, Typography, TextareaAutosize, Button, makeStyles } from '@material-ui/core';\nimport { newComment, getComments } from '../../../service/api'; //components\n\nimport Comment from './Comment';\nimport { LoginContext } from '../../context/ContextProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  container: {\n    marginTop: 100,\n    display: 'flex',\n    '& > *': {// padding: '10px '\n    }\n  },\n  image: {\n    width: 50,\n    height: 50,\n    borderRadius: '50%'\n  },\n  textarea: {\n    height: 100,\n    width: '100%',\n    margin: '0 20px'\n  },\n  button: {\n    height: 40\n  }\n});\nconst initialValue = {\n  name: '',\n  postId: '',\n  date: new Date(),\n  comments: ''\n};\n\nconst Comments = ({\n  post\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const url = 'https://static.thenounproject.com/png/12017-200.png';\n  const [comment, setComment] = useState(initialValue);\n  const [comments, setComments] = useState([]);\n  const [data, setData] = useState();\n  const [toggle, setToggle] = useState(false);\n  const {\n    account,\n    setAccount\n  } = useContext(LoginContext);\n  useEffect(() => {\n    const getData = async () => {\n      const response = await getComments(post._id);\n      setComments(response);\n    };\n\n    getData();\n  }, [toggle, post]);\n\n  const handleChange = e => {\n    setComment({ ...comment,\n      name: post.username,\n      postId: post._id,\n      comments: e.target.value\n    });\n    setData(e.target.value);\n  };\n\n  const addComment = async () => {\n    await newComment(comment);\n    setData('');\n    setToggle(prev => !prev);\n  };\n\n  console.log(post);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: url,\n        className: classes.image,\n        alt: \"dp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        rowsMin: 5,\n        className: classes.textarea,\n        placeholder: \"what's on your mind?\",\n        onChange: e => handleChange(e),\n        value: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"medium\",\n        className: classes.button,\n        onClick: e => addComment(e),\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: comments && comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment,\n        setToggle: setToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Comments, \"HUyT2yO1I3F2WpK18/B9Bo2bwHA=\", false, function () {\n  return [useStyles];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/shivansh/Desktop/MERN-Stack-Projects-master/MERN-Stack-Projects-master/Blog-Website/client/src/components/details/comments/Comments.jsx"],"names":["useState","useEffect","Box","Typography","TextareaAutosize","Button","makeStyles","newComment","getComments","Comment","LoginContext","useStyles","container","marginTop","display","image","width","height","borderRadius","textarea","margin","button","initialValue","name","postId","date","Date","comments","Comments","post","classes","url","comment","setComment","setComments","data","setData","toggle","setToggle","account","setAccount","useContext","getData","response","_id","handleChange","e","username","target","value","addComment","prev","console","log","map"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Box, Typography, TextareaAutosize, Button, makeStyles } from '@material-ui/core';\n\nimport { newComment, getComments } from '../../../service/api';\n\n//components\nimport Comment from './Comment';\nimport { LoginContext } from '../../context/ContextProvider';\n\nconst useStyles = makeStyles({\n    container: {\n        marginTop: 100,\n        display: 'flex',\n        '& > *': {\n            // padding: '10px '\n        }\n    },\n    image: {\n        width: 50,\n        height: 50,\n        borderRadius: '50%'\n    },\n    textarea: {\n        height: 100,\n        width: '100%', \n        margin: '0 20px'\n    },\n    button: {\n        height: 40\n    }\n})\n\nconst initialValue = {\n    name: '',\n    postId: '',\n    date: new Date(),\n    comments: ''\n}\n\nconst Comments = ({ post }) => {\n    const classes = useStyles();\n    const url = 'https://static.thenounproject.com/png/12017-200.png'\n\n    const [comment, setComment] = useState(initialValue);\n    const [comments, setComments] = useState([]);\n    const [data, setData] = useState();\n    const [toggle, setToggle] = useState(false);\n    const { account, setAccount } = useContext(LoginContext);\n\n\n    useEffect(() => {\n        const getData = async () => {\n            const response = await getComments(post._id);\n            setComments(response);\n        }\n        getData();\n    }, [toggle, post]);\n\n    const handleChange = (e) => {\n        setComment({\n            ...comment,\n            name: post.username,\n            postId: post._id,\n            comments: e.target.value\n        });\n        setData(e.target.value);\n    }\n\n    const addComment = async() => {\n        await newComment(comment);\n        setData('')\n        setToggle(prev => !prev);\n    }\n    \n\n    console.log(post);\n    return (\n        <Box>\n            <Box className={classes.container}>\n                <img src={url} className={classes.image} alt=\"dp\" />   \n                <TextareaAutosize \n                    rowsMin={5} \n                    className={classes.textarea} \n                    placeholder=\"what's on your mind?\"\n                    onChange={(e) => handleChange(e)} \n                    value={data}\n                />\n                <Button \n                    variant=\"contained\" \n                    color=\"primary\" \n                    size=\"medium\" \n                    className={classes.button}\n                    onClick={(e) => addComment(e)}\n                >Post</Button>             \n            </Box>\n            <Box>\n                {\n                    comments && comments.map(comment => (\n                        <Comment comment={comment} setToggle={setToggle} />\n                    ))\n                }\n            </Box>\n        </Box>\n    )\n}\n\nexport default Comments;"]},"metadata":{},"sourceType":"module"}