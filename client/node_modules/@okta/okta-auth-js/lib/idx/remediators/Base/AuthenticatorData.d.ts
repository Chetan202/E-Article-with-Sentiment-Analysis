import { Remediator, RemediationValues } from './Remediator';
import { Authenticator } from '../../types';
import { IdxRemediationValue, IdxOption, IdxRemediation } from '../../types/idx-js';
export declare type AuthenticatorDataValues = RemediationValues & {
    methodType?: string;
};
export declare class AuthenticatorData extends Remediator {
    map: {
        authenticator: any[];
    };
    values: AuthenticatorDataValues;
    constructor(remediation: IdxRemediation, values?: AuthenticatorDataValues);
    getNextStep(): {
        options: IdxOption[];
        name: string;
        type?: string;
        canSkip?: boolean;
        inputs?: {
            name: string;
            required?: boolean;
        }[];
    };
    protected getAuthenticatorFromValues(): Authenticator;
    protected mapAuthenticatorFromValues(authenticator?: Authenticator): Authenticator;
    protected getAuthenticatorFromRemediation(): IdxRemediationValue;
    private getMethodTypes;
}
