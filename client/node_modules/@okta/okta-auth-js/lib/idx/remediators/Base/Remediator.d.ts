import { NextStep, IdxMessage, Authenticator } from '../../types';
import { IdxRemediation } from '../../types/idx-js';
export declare type IdxToRemediationValueMap = Record<string, string[]>;
export interface RemediationValues {
    stateHandle?: string;
    authenticators?: Authenticator[] | string[];
}
export declare class Remediator {
    static remediationName: string;
    remediation: IdxRemediation;
    values: RemediationValues;
    map?: IdxToRemediationValueMap;
    constructor(remediation: IdxRemediation, values?: RemediationValues);
    getName(): string;
    canRemediate(): boolean;
    getData(key?: string): any;
    hasData(key: string): boolean;
    getNextStep(): NextStep;
    private getInputs;
    getMessages(): IdxMessage[] | undefined;
    getValuesAfterProceed(): {
        authenticators: Authenticator[];
        stateHandle?: string;
    };
    protected getRelatesToType(): string;
}
