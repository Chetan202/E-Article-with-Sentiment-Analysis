{"version":3,"sources":["../../../lib/idx/authenticate.ts"],"names":["flow","Identify","SelectAuthenticatorAuthenticate","SelectAuthenticatorEnroll","AuthenticatorEnrollmentData","AuthenticatorVerificationData","EnrollAuthenticator","ChallengeAuthenticator","ReEnrollAuthenticator","RedirectIdp","authenticate","authClient","options","flowMonitor","AuthenticationFlowMonitor"],"mappings":";;;;AAKA;;AACA;;AAkBA;;AAEA,MAAMA,IAAqB,GAAG;AAC5B,cAAYC,qBADgB;AAE5B,uCAAqCC,4CAFT;AAG5B,iCAA+BC,sCAHH;AAI5B,mCAAiCC,wCAJL;AAK5B,qCAAmCC,0CALP;AAM5B,0BAAwBC,gCANI;AAO5B,6BAA2BC,mCAPC;AAQ5B,4BAA0BC,kCARE;AAS5B,kBAAgBC;AATY,CAA9B;;AAqBO,eAAeC,YAAf,CACLC,UADK,EACiBC,OADjB,EAEoB;AACzB,QAAMC,WAAW,GAAG,IAAIC,uCAAJ,EAApB;AACA,SAAO,cAAIH,UAAJ,EAAgB,EACrB,GAAGC,OADkB;AAErBZ,IAAAA,IAFqB;AAGrBa,IAAAA;AAHqB,GAAhB,CAAP;AAKD","sourcesContent":["import { \n  OktaAuth,\n  IdxOptions,\n  IdxTransaction,\n} from '../types';\nimport { run, RemediationFlow } from './run';\nimport { \n  Identify,\n  IdentifyValues,\n  SelectAuthenticatorAuthenticate,\n  SelectAuthenticatorAuthenticateValues,\n  ChallengeAuthenticator,\n  ChallengeAuthenticatorValues,\n  ReEnrollAuthenticator,\n  ReEnrollAuthenticatorValues,\n  RedirectIdp,\n  AuthenticatorEnrollmentData,\n  AuthenticatorEnrollmentDataValues,\n  SelectAuthenticatorEnroll,\n  SelectAuthenticatorEnrollValues,\n  EnrollAuthenticator,\n  EnrollAuthenticatorValues,\n  AuthenticatorVerificationData,\n} from './remediators';\nimport { AuthenticationFlowMonitor } from './flowMonitors';\n\nconst flow: RemediationFlow = {\n  'identify': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'redirect-idp': RedirectIdp\n};\n\nexport type AuthenticationOptions = IdxOptions \n  & IdentifyValues \n  & SelectAuthenticatorAuthenticateValues \n  & SelectAuthenticatorEnrollValues\n  & ChallengeAuthenticatorValues \n  & ReEnrollAuthenticatorValues\n  & AuthenticatorEnrollmentDataValues\n  & EnrollAuthenticatorValues;\n\nexport async function authenticate(\n  authClient: OktaAuth, options: AuthenticationOptions\n): Promise<IdxTransaction> {\n  const flowMonitor = new AuthenticationFlowMonitor();\n  return run(authClient, { \n    ...options, \n    flow,\n    flowMonitor,\n  });\n}\n"],"file":"authenticate.js"}