"use strict";

exports.PasswordRecoveryFlowMonitor = void 0;

var _FlowMonitor = require("./FlowMonitor");

class PasswordRecoveryFlowMonitor extends _FlowMonitor.FlowMonitor {
  isRemediatorCandidate(remediator, remediations, values) {
    var _this$previousRemedia;

    const prevRemediatorName = (_this$previousRemedia = this.previousRemediator) === null || _this$previousRemedia === void 0 ? void 0 : _this$previousRemedia.getName();
    const remediatorName = remediator.getName();

    if (remediatorName === 'select-authenticator-authenticate' && ['select-authenticator-authenticate', 'reenroll-authenticator'].includes(prevRemediatorName)) {
      return false;
    }

    if (remediatorName === 'select-authenticator-authenticate' && remediations.some(({
      name
    }) => name === 'challenge-authenticator')) {
      return false;
    }

    return super.isRemediatorCandidate(remediator, remediations, values);
  }

}

exports.PasswordRecoveryFlowMonitor = PasswordRecoveryFlowMonitor;
//# sourceMappingURL=PasswordRecoveryFlowMonitor.js.map