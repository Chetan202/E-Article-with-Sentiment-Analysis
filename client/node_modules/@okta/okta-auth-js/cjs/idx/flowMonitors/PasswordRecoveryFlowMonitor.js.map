{"version":3,"sources":["../../../../lib/idx/flowMonitors/PasswordRecoveryFlowMonitor.ts"],"names":["PasswordRecoveryFlowMonitor","FlowMonitor","isRemediatorCandidate","remediator","remediations","values","prevRemediatorName","previousRemediator","getName","remediatorName","includes","some","name"],"mappings":";;;;AAAA;;AAEO,MAAMA,2BAAN,SAA0CC,wBAA1C,CAAsD;AAC3DC,EAAAA,qBAAqB,CAACC,UAAD,EAAaC,YAAb,EAA4BC,MAA5B,EAAqC;AAAA;;AACxD,UAAMC,kBAAkB,4BAAG,KAAKC,kBAAR,0DAAG,sBAAyBC,OAAzB,EAA3B;AACA,UAAMC,cAAc,GAAGN,UAAU,CAACK,OAAX,EAAvB;;AAEA,QAAIC,cAAc,KAAK,mCAAnB,IACC,CACD,mCADC,EAED,wBAFC,EAGDC,QAHC,CAGQJ,kBAHR,CADL,EAIkC;AAChC,aAAO,KAAP;AACD;;AAED,QAAIG,cAAc,KAAK,mCAAnB,IACCL,YAAY,CAACO,IAAb,CAAkB,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAcA,IAAI,KAAK,yBAAzC,CADL,EAC0E;AACxE,aAAO,KAAP;AACD;;AAED,WAAO,MAAMV,qBAAN,CAA4BC,UAA5B,EAAwCC,YAAxC,EAAsDC,MAAtD,CAAP;AACD;;AAnB0D","sourcesContent":["import { FlowMonitor } from './FlowMonitor';\n\nexport class PasswordRecoveryFlowMonitor extends FlowMonitor {\n  isRemediatorCandidate(remediator, remediations?, values?) {\n    const prevRemediatorName = this.previousRemediator?.getName();\n    const remediatorName = remediator.getName();\n    \n    if (remediatorName === 'select-authenticator-authenticate' \n      && [\n        'select-authenticator-authenticate',\n        'reenroll-authenticator'\n      ].includes(prevRemediatorName)) {\n      return false;\n    }\n\n    if (remediatorName === 'select-authenticator-authenticate' \n      && remediations.some(({ name }) => name === 'challenge-authenticator')) {\n      return false;\n    }\n\n    return super.isRemediatorCandidate(remediator, remediations, values);\n  }\n}\n"],"file":"PasswordRecoveryFlowMonitor.js"}